#!/bin/bash

bm="$(dirname "$0")";
data="$bm/internal/static/";
jslib="$(realpath "$bm/../../../jslib/")";
jslibJS="$jslib/lib.js/";
tmpFile="$(mktemp)";

(
	cd "$data";
	for lib in lib/*.js; do
		if [ "$lib" = "lib/html.js" -o "$lib" = "lib/svg.js" ]; then
			continue;
		fi;
		source="$jslibJS/$(basename "$lib")";
		if [ "$lib" -nt "$source" -o "$lib" -ot "$source" ]; then
			cp -f --preserve=timestamps "$source" "$lib";
		fi;
	done;
	$jslib/html.sh "$($jslib/requiredHTML.sh script.js)" lib/html.js;
	$jslib/svg.sh "$($jslib/requiredSVG.sh script.js)" lib/svg.js;
	head -n5 index.html | tr -d '\n	';
	echo -n "<script type=\"module\">";
	jspacker -i "/$(grep "<script" index.html | grep -v "lib/load.js" | sed -e 's/.*src="\([^"]*\)".*/\1/')" -n | tail -n+2 | sed -e 's/pageLoad/(document.readyState == "complete" ? Promise.resolve() : new Promise(successFn => globalThis.addEventListener("load", successFn, {once: true})))/' | terser -m --module --compress pure_getters,passes=3 --ecma 6 | tr -d '\n';
	echo -n "</script><style type=\"text/css\">";
	grep -hv "^@import" *.css | uglifycss | tr -d '\n';
	echo -n "</style>";
	tail -n5 index.html | tr -d '\n	';
) > "$tmpFile";

if [ "$1" = "-size" ]; then
	stat -c %s "$tmpFile";
	rm -f "$tmpFile";
	exit 0;
fi;

cat > index.go <<HEREDOC
package main

import (
	_ "embed" // required for index embed
	"time"

	"vimagination.zapto.org/httpembed"
)

var (
	//go:embed index.gz
	indexData []byte
	index     = httpembed.HandleBuffer(indexData, $(stat --format "%s" "$tmpFile"), time.Unix($(date "+%s"), 0))
)
HEREDOC

zopfli --gzip --i1000 -c "$tmpFile" > index.gz;
rm -f "$tmpFile";
